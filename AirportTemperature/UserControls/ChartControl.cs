/*
 * Created by SharpDevelop.
 * User: Robert
 * Date: 12/12/2014
 * Time: 16:34
 * 
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */
using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;
using System.Globalization;
using System.Windows.Forms.DataVisualization.Charting;

namespace AirportTemperature.UserControls
{
	/// <summary>
	/// this user control contains the chart
	/// </summary>
	public partial class ChartControl : UserControl
	{
		private static readonly string[] chartType = {"Column","Bar","Line","Range"};
		DateTimeFormatInfo myDateInfo = new DateTimeFormatInfo();
		
		public ChartControl()
		{
			//
			// The InitializeComponent() call is required for Windows Forms designer support.
			//
			InitializeComponent();
			InitComboBox();
			//chart series must be cleared to remove autogenerated forms series
			chartTemperature.Series.Clear();
			InitialiseChart();
			
			
		}
		//populate the combobox
		void InitComboBox()
		{
			for(int i=0; i<chartType.Length; i++)
			{
				comboBoxType.Items.Add(chartType[i]);
			}
			comboBoxType.SelectedIndex = 0;
		}
		//initialise the charts titles and series
		void InitialiseChart()
		{
			chartTemperature.Titles.Add("Temperature Over Time");
			chartTemperature.ChartAreas[0].AxisX.Title = "Month";
			chartTemperature.ChartAreas[0].AxisY.Title = "Temperature (°C)";
			
			for(int i = 0; i<MainForm.location.Length; i++)
			{
				AddSeries(MainForm.location[i]);
			}
			
			UpdateChart();
		}
		void AddSeries(String seriesName)
		{
			chartTemperature.Series.Add(seriesName);
			chartTemperature.Series[seriesName].ChartType = SeriesChartType.Column;
		}
		public void UpdateChart()
		{
			chartTemperature.ChartAreas[0].AxisX.CustomLabels.Clear();
			for(int i=0; i<MainForm.temperature.GetLength(0); i++)
			{
				chartTemperature.Series[MainForm.location[i]].Points.Clear();
				for(int i1=0; i1<MainForm.temperature.GetLength(1); i1++)
				{
					if(MainForm.temperature[i,i1] != MainForm.erroneousFigure)
					{
						chartTemperature.Series[MainForm.location[i]].Points.AddY(MainForm.temperature[i,i1]);
					}
					else
					{
						chartTemperature.Series[MainForm.location[i]].Points.AddY(0);
					}
					//this if statement handles populating the x axis with month lables
					if(i==0)
					{
						
						// i1 cylces through 12 values (0-11) however myDateIfo reguires 12 values (1-12)
						int month = i1+1; 
						chartTemperature.ChartAreas[0].AxisX.CustomLabels.Add(i1+0.5,i1+1.5,myDateInfo.GetAbbreviatedMonthName(month));
					}
					
				}
				
			}
			
		}
		void ComboBoxTypeSelectedIndexChanged(object sender, EventArgs e)
		{
			for(int i = 0; i<MainForm.location.Length; i++)
			{
				try
				{
					switch(comboBoxType.SelectedIndex)
					{
						case 0:
							chartTemperature.Series[MainForm.location[i]].ChartType = SeriesChartType.Column;
							break;
						case 1:
							chartTemperature.Series[MainForm.location[i]].ChartType = SeriesChartType.Bar;
							break;
						case 2:
							chartTemperature.Series[MainForm.location[i]].ChartType = SeriesChartType.Line;
							break;
						case 3:
							chartTemperature.Series[MainForm.location[i]].ChartType = SeriesChartType.Range;
							break;
						default:
							break;
					}
					
				}
				catch(Exception ee)
				{
					
				}
			}
		}
		
	}
}
